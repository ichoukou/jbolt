package cn.jbolt.common.model.base;
import cn.jbolt.base.JBoltBaseModel;
import cn.jbolt.common.gen.JBoltField;

/**
 * 字典类型
 * Generated by JBolt, do not modify this file.
 */
@SuppressWarnings({"serial", "unchecked"})
public abstract class BaseDictionaryType<M extends BaseDictionaryType<M>> extends JBoltBaseModel<M>{

	/**
	 * 主键ID
	 */
	public M setId(java.lang.Integer id) {
		set("id", id);
		return (M)this;
	}
	
	/**
	 * 主键ID
	 */
	@JBoltField(name="id" ,columnName="id",type="Integer", remark="主键ID")
	public java.lang.Integer getId() {
		return getInt("id");
	}

	public M setName(java.lang.String name) {
		set("name", name);
		return (M)this;
	}
	
	@JBoltField(name="name" ,columnName="name",type="String", remark="NAME")
	public java.lang.String getName() {
		return getStr("name");
	}

	/**
	 * 模式层级
	 */
	public M setModeLevel(java.lang.Integer modeLevel) {
		set("mode_level", modeLevel);
		return (M)this;
	}
	
	/**
	 * 模式层级
	 */
	@JBoltField(name="modeLevel" ,columnName="mode_level",type="Integer", remark="模式层级")
	public java.lang.Integer getModeLevel() {
		return getInt("mode_level");
	}

	/**
	 * 标识KEY
	 */
	public M setTypeKey(java.lang.String typeKey) {
		set("type_key", typeKey);
		return (M)this;
	}
	
	/**
	 * 标识KEY
	 */
	@JBoltField(name="typeKey" ,columnName="type_key",type="String", remark="标识KEY")
	public java.lang.String getTypeKey() {
		return getStr("type_key");
	}

}
