<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>cn.jbolt</groupId>
	<artifactId>jbolt</artifactId>
	<version>2.5.2</version>
	<packaging>jar</packaging>
	<name>jbolt</name>
	<description>JBolt-基于JFinal的极速开发框架</description>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<maven.compiler.encoding>UTF-8</maven.compiler.encoding>
		<jdk.version>1.8</jdk.version>
		<junit.version>3.8.1</junit.version>
		<jfinal.version>4.9</jfinal.version>
		<oshi.version>4.7.0</oshi.version>
		<jna.version>5.5.0</jna.version>
		<cos.version>2020.4</cos.version>
		<emoji-java.version>5.1.1</emoji-java.version>
		<log4j.version>1.2.17</log4j.version>
		<druid.version>1.1.18</druid.version>
		<fastjson.version>1.2.70</fastjson.version>
		<mysql.version>8.0.18</mysql.version>
		<oracle.version>11.2.0.3</oracle.version>
		<sqlserver.version>4.0</sqlserver.version>
		<postgresql.version>42.2.6</postgresql.version>
		<jsoup.version>1.13.1</jsoup.version>
		<cron4j.version>2.2.5</cron4j.version>
		<jfinalweixin.version>2.5</jfinalweixin.version>
		<ehcache.version>2.6.11</ehcache.version>
		<hutool.version>5.3.7</hutool.version>
		<slf4j.version>1.7.25</slf4j.version>
		<log4j2.version>2.9.1</log4j2.version>
		<jfinalundertow.version>2.1</jfinalundertow.version>
		<thumbnailator.version>0.4.11</thumbnailator.version>
		<pinyin4j.version>2.5.0</pinyin4j.version>
		<commonslang.version>3.8.1</commonslang.version>
		<jwt.version>0.11.1</jwt.version>
		<zxing.version>3.4.0</zxing.version>
		<poi.version>4.1.2</poi.version>
		<xerces.version>2.12.0</xerces.version>
	</properties>

	<!-- 使用阿里 maven 库 -->
	<repositories>
		<repository>
			<id>ali-maven</id>
			<url>http://maven.aliyun.com/nexus/content/groups/public</url>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>true</enabled>
				<updatePolicy>always</updatePolicy>
				<checksumPolicy>fail</checksumPolicy>
			</snapshots>
		</repository>
	</repositories>

	<dependencies>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.jfinal</groupId>
			<artifactId>cos</artifactId>
			<version>${cos.version}</version>
		</dependency>
		<dependency>
			<groupId>org.jsoup</groupId>
			<artifactId>jsoup</artifactId>
			<version>${jsoup.version}</version>
		</dependency>
		
		<dependency>
		  <groupId>com.vdurmont</groupId>
		  <artifactId>emoji-java</artifactId>
		  <version>${emoji-java.version}</version>
		</dependency>
		<!-- <dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>${log4j.version}</version>
		</dependency> -->
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>${commonslang.version}</version>
		</dependency>
		<dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>druid</artifactId>
			<version>${druid.version}</version>
		</dependency>

		<dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>fastjson</artifactId>
			<version>${fastjson.version}</version>
		</dependency>
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>${mysql.version}</version>
		</dependency>
		<!-- 默认是Mysql，如果启用Oracle 请将注释解开 -->
		 <!--
		 <dependency>
		    <groupId>com.oracle</groupId>
		    <artifactId>ojdbc6</artifactId>
		    <version>${oracle.version}</version>
		</dependency> 
		-->
		<!-- 默认是Mysql，如果启用Sqlserver 请将注释解开 -->
		<!--
		<dependency>
	    <groupId>com.microsoft.sqlserver</groupId>
		    <artifactId>sqljdbc4</artifactId>
		    <version>${sqlserver.version}</version>
		</dependency>
		-->
		
		<!-- 默认是Mysql，如果启用Sqlserver 请将注释解开 -->
		<!--
		<dependency>
	    	<groupId>org.postgresql</groupId>
	   	 	<artifactId>postgresql</artifactId>
	  	 	<version>${postgresql.version}</version>
		</dependency>
		-->
		<dependency>
			<groupId>org.clojars.cbilson</groupId>
			<artifactId>pinyin4j</artifactId>
			<version>${pinyin4j.version}</version>
		</dependency>
		
		<!-- jwt -->
		
		<dependency>
		    <groupId>io.jsonwebtoken</groupId>
		    <artifactId>jjwt-api</artifactId>
		    <version>${jwt.version}</version>
		</dependency>
		<dependency>
		    <groupId>io.jsonwebtoken</groupId>
		    <artifactId>jjwt-impl</artifactId>
		    <version>${jwt.version}</version>
		    <scope>runtime</scope>
		</dependency>
		<dependency>
		    <groupId>io.jsonwebtoken</groupId>
		    <artifactId>jjwt-jackson</artifactId>
		    <version>${jwt.version}</version>
		    <scope>runtime</scope>
		</dependency>

		<dependency>
		    <groupId>com.google.zxing</groupId>
		    <artifactId>javase</artifactId>
		    <version>${zxing.version}</version>
		</dependency>
		<dependency>
		    <groupId>org.apache.poi</groupId>
		    <artifactId>poi-ooxml</artifactId>
		    <version>${poi.version}</version>
		</dependency>
		<dependency>
		    <groupId>xerces</groupId>
		    <artifactId>xercesImpl</artifactId>
		    <version>${xerces.version}</version>
		</dependency>
		<!-- undertow -->
		<dependency>
			<groupId>com.jfinal</groupId>
			<artifactId>jfinal-undertow</artifactId>
			<version>${jfinalundertow.version}</version>
		</dependency>
		
		<!-- JFinal Undertow jsp支持 -->
		<!-- <dependency>
		   <groupId>io.undertow.jastow</groupId>
		   <artifactId>jastow</artifactId>
		   <version>2.1.0.Final</version>
		   <exclusions>
		      以下两个包跟jfinal-undertow依赖冲突
		      <exclusion>
		         <groupId>io.undertow</groupId>
		         <artifactId>undertow-servlet</artifactId>
		      </exclusion>
		      <exclusion>
		         <groupId>org.jboss.logging</groupId>
		         <artifactId>jboss-logging</artifactId>
		      </exclusion>
		   </exclusions>
		</dependency>
		<dependency>
		   <groupId>org.jboss.spec.javax.servlet.jsp</groupId>
		   <artifactId>jboss-jsp-api_2.3_spec</artifactId>
		   <version>2.0.0.Final</version>
		</dependency> -->

		<!-- WebSocket 支持 -->
		<!-- <dependency> <groupId>io.undertow</groupId> <artifactId>undertow-websockets-jsr</artifactId> 
			<version>2.0.16.Final</version> </dependency> -->

		<!-- 避免控制台输出如下提示信息： SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder". 
			项目中实际上用不到这个 jar 包 注意：eclipse 下可以将 scope 设置为 provided -->
		
		<!--slf4j及log4j日志-->
		<!--门面-->
		<dependency>
		    <groupId>org.slf4j</groupId>
		    <artifactId>slf4j-api</artifactId>
		    <version>${slf4j.version}</version>
		</dependency>
		<!--桥接器:告诉slf4j使用slf4j-simple 如果需要 请注释下方Log4j2 解开simple-->
		<!-- <dependency>
		       <groupId>org.slf4j</groupId>
		       <artifactId>slf4j-simple</artifactId>
		       <version>${slf4j.version}</version>
		</dependency> -->
		<!--桥接器:告诉slf4j使用Log4j2-->
		<dependency>
		    <groupId>org.apache.logging.log4j</groupId>
		    <artifactId>log4j-slf4j-impl</artifactId>
		    <version>${log4j2.version}</version>
		    <exclusions>
		        <exclusion>
		            <artifactId>slf4j-api</artifactId>
		            <groupId>org.slf4j</groupId>
		        </exclusion>
		    </exclusions>
		</dependency>
		<!--具体实现,log4j2-->
		<dependency>
		    <groupId>org.apache.logging.log4j</groupId>
		    <artifactId>log4j-api</artifactId>
		    <version>${log4j2.version}</version>
		</dependency>
		<dependency>
		    <groupId>org.apache.logging.log4j</groupId>
		    <artifactId>log4j-core</artifactId>
		    <version>${log4j2.version}</version>
		</dependency>
		<!--用于解决web环境下关闭服务器时可能出现的log4j线程无法及时关闭的warn，web工程需要包含log4j-web，非web工程不需要 -->
		<!-- https://mvnrepository.com/artifact/org.apache.logging.log4j/log4j-web -->
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-web</artifactId>
			<scope>runtime</scope>
			<version>${log4j2.version}</version>
		</dependency>
		
		<!--使用log4j2的AsyncLogger时需要包含disruptor -->
		<!-- https://mvnrepository.com/artifact/com.lmax/disruptor -->
		<!-- <dependency>
		    <groupId>com.lmax</groupId>
		    <artifactId>disruptor</artifactId>
		    <scope>runtime</scope>
		    <version>3.4.2</version>
		</dependency> -->




		<!--自选库 -->
		<dependency>
		    <groupId>com.jfinal</groupId>
		    <artifactId>jfinal-weixin</artifactId>
		    <version>${jfinalweixin.version}</version>
		</dependency>
		<dependency>
			<groupId>it.sauronsoftware.cron4j</groupId>
			<artifactId>cron4j</artifactId>
			<version>${cron4j.version}</version>
		</dependency>
		<dependency>
			<groupId>net.sf.ehcache</groupId>
			<artifactId>ehcache-core</artifactId>
			<version>${ehcache.version}</version>
		</dependency>

		<dependency>
			<groupId>cn.hutool</groupId>
			<artifactId>hutool-all</artifactId>
			<version>${hutool.version}</version>
		</dependency>


		<dependency>
			<groupId>com.jfinal</groupId>
			<artifactId>jfinal</artifactId>
			<version>${jfinal.version}</version>
		</dependency>
		
		<dependency>
		    <groupId>com.github.oshi</groupId>
		    <artifactId>oshi-core</artifactId>
		    <version>${oshi.version}</version>
		</dependency>
		
		<dependency>
		    <groupId>net.java.dev.jna</groupId>
		    <artifactId>jna</artifactId>
		    <version>${jna.version}</version>
		</dependency>
		<dependency>
		    <groupId>net.java.dev.jna</groupId>
		    <artifactId>jna-platform</artifactId>
		    <version>${jna.version}</version>
		</dependency>
	</dependencies>


	<build>
		<finalName>jbolt</finalName>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.6.1</version>
				<configuration>
					<source>${jdk.version}</source>
					<target>${jdk.version}</target>
					<encoding>${project.build.sourceEncoding}</encoding>
					<!-- java8 保留参数名编译参数 -->
					<compilerArgument>-parameters</compilerArgument>
					<compilerArguments>
						<verbose />
					</compilerArguments>
				</configuration>
			</plugin>

			<!-- jar 包中的配置文件优先级高于 config 目录下的 "同名文件" 因此，打包时需要排除掉 jar 包中来自 src/main/resources 
				目录的 配置文件，否则部署时 config 目录中的同名配置文件不会生效 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>2.6</version>
				<configuration>
					<excludes>
					    <exclude>/cn/jbolt/common/gen/</exclude>
					    <exclude>/sql/</exclude>
					    <exclude>/gentpl/</exclude>
					    <exclude>/dbconfig/</exclude>
						<exclude>*.jf</exclude>
						<exclude>*.sql</exclude>
						<exclude>*.txt</exclude>
						<exclude>*.xml</exclude>
						<exclude>*.setting</exclude>
						<exclude>*.properties</exclude>
					</excludes>
				</configuration>
			</plugin>

			<!-- 使用 mvn clean package 打包 更多配置可参考官司方文档：http://maven.apache.org/plugins/maven-assembly-plugin/single-mojo.html -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-assembly-plugin</artifactId>
				<version>3.1.0</version>
				<executions>
					<execution>
						<id>make-assembly</id>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>

						<configuration>
							<!-- 打包生成的文件名 -->
							<finalName>${project.artifactId}</finalName>
							<!-- jar 等压缩文件在被打包进入 zip、tar.gz 时是否压缩，设置为 false 可加快打包速度 -->
							<recompressZippedFiles>false</recompressZippedFiles>
							<!-- 打包生成的文件是否要追加 release.xml 中定义的 id 值 -->
							<appendAssemblyId>true</appendAssemblyId>
							<!-- 指向打包描述文件 package.xml -->
							<descriptors>
								<descriptor>package.xml</descriptor>
							</descriptors>
							<!-- 打包结果输出的基础目录 -->
							<outputDirectory>${project.build.directory}/</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>

		</plugins>
	</build>
</project>